@using Frontend.Src.Authentication;
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager

<PageTitle>Frontend</PageTitle>

<div class="page">
    <div class="sidebar" style="background-image:none;background-color:darkslategrey;">
        <NavMenu />
    </div>

    <main style="background-image:none;background-color:#e1eeee;" >
        <div class="row" style="background-image:none;background-color:darkslategrey;">
            <div class="col-sm d-flex flex-row w-50">
                <input class="form-control m-2" placeholder="Prduct description" type="text" @bind="keyWord">
                <button class="btn text-light m-2" style="background-image:none;background-color:#1c2f2f;" @onclick="SearchForTag">Search</button>
            </div>
            <div class =" col-sm d-flex flex-row-reverse">
                <AuthorizeView>
                    <Authorized>
                        <a class="btn text-light m-2" style="background-image:none;background-color:#1c2f2f;" role="button" @onclick="Logout" href="javascript:void(0)">Logout</a>
                    </Authorized>
                    <NotAuthorized>
                        <a class="btn text-light m-2" style="background-image:none;background-color:#1c2f2f;" role="button" href="/signup">SignUp</a>
                        <a class="btn text-light m-2" style="background-image:none;background-color:#1c2f2f;" role="button" href="/login">Login</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>


@code {
    private async Task Logout()
    {
        CustomAuthStateProvider customAuthStateProvider = (CustomAuthStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(null);
        navManager.NavigateTo("/", true);
    }
    public string keyWord { get; set; } = string.Empty;
    public void SearchForTag()
    {
        navManager.NavigateTo($"/item-by-tag/{keyWord.ToLower()}");
    }
}