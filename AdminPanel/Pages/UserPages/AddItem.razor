
@page "/addItem"
@using Common.DataStructure
@using Common.Utilitary


<form enctype="multipart/form-data">
    @*Name*@
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Product name</label>
        <div class="col-sm-5"><input class="form-control" placeholder="Prduct name" @bind="name" type="text"></div>
    </div>
    @*Description*@
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Product description</label>
        <div class="col-sm-5"><input class="form-control" placeholder="Prduct description" @bind="description" type="text"></div>
    </div>
    @*Discount*@
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Product discount</label>
        <div class="col-sm-5"><input class="form-control" placeholder="Prduct discount" @bind="discount" type="number"></div>
    </div>
    @*Price*@
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Product price</label>
        <div class="col-sm-5"><input class="form-control" placeholder="Prduct price" @bind="price" type="number"></div>
    </div>

    @*Tags*@
    <div class="form-group row">
        <label class="col-sm-2 col-form-label">Tags</label>
        <div class="col-sm-5"><input class="form-control" placeholder="tag 1,tag 2" @bind="tagsAsString" type ="text"></div>
    </div>
    <div class="form-group row">
        <label slass="form-label form-control form-control-sm">
            <InputFile OnChange="@OnChange" multiple />
        </label>
    </div>
    <div class="col-md-12 text-center">
    <button class="btn btn-primary" @onclick="SubmitItem">Submit</button>
    </div>
</form>


@code {
    string name = string.Empty;
    string description = string.Empty;
    int discount ;
    int price ;
    Request request = new();
    string uploadMessage = string.Empty;
    string imageBase64= string.Empty;
    string tagsAsString = string.Empty;
    List<string> Tags = new();

    private async void SubmitItem()
    {
        Tags = tagsAsString.ToLower().Split(",").ToList();
        await request.SaveItem(new Product(name, description, discount, price, imageBase64,Tags));
    }


    async Task OnChange(InputFileChangeEventArgs e)
    {
        string format = "image/jpeg";

        foreach (IBrowserFile file in e.GetMultipleFiles())
        {
            if (string.Equals(file.ContentType, format, StringComparison.OrdinalIgnoreCase))
            {
                long maxFileSize = 1024 * 1024 * 5; // 5 MB 
                var readStream = (await file.RequestImageFileAsync(format, 600, 600)).OpenReadStream(maxFileSize);
                var buf = new byte[readStream.Length];
                var ms = new MemoryStream(buf);
                await readStream.CopyToAsync(ms);
                var buffer = ms.ToArray();
                imageBase64 = $"data:{format};base64,{Convert.ToBase64String(buffer)}";
            }
        }
    }


}
